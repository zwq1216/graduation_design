# Generated by Django 2.0 on 2019-04-24 17:10

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        ('community', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('sno', models.CharField(max_length=20, unique=True, verbose_name='用户编号')),
                ('realname', models.CharField(max_length=40, verbose_name='真实姓名')),
                ('role', models.IntegerField(choices=[(0, '普通用户'), (1, '社团成员'), (2, '社长'), (3, '社团运营监管人员'), (4, '超级管理员')], default=0, verbose_name='用户角色')),
                ('image', models.FileField(default='default/user.png', upload_to='avastar/%Y_%m')),
                ('phone', models.CharField(max_length=11, verbose_name='手机号')),
                ('leave_date', models.DateTimeField(blank=True, null=True, verbose_name='离开日期')),
                ('community', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='community.Community', verbose_name='所属社团')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ApplyRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30, verbose_name='申请标题')),
                ('apply_data', models.FileField(upload_to='apply/%Y_%m', verbose_name='申请材料路径')),
                ('type', models.IntegerField(choices=[(0, '申请加入社团'), (1, '申请发布资料'), (2, '申请发布项目'), (3, '申请创建社团')], default=0, verbose_name='申请类型')),
                ('status', models.IntegerField(choices=[(0, '已申请'), (1, '处理中'), (2, '未通过'), (3, '已通过')], default=0, verbose_name='申请状态')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('apply_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applyuser', to=settings.AUTH_USER_MODEL, verbose_name='申请人')),
                ('deal_user', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dealuser', to=settings.AUTH_USER_MODEL, verbose_name='处理人')),
                ('users', models.ManyToManyField(related_name='many_user', to=settings.AUTH_USER_MODEL, verbose_name='发送人')),
            ],
            options={
                'verbose_name': '申请记录',
                'verbose_name_plural': '申请记录',
            },
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='学院名称')),
                ('no', models.CharField(max_length=30, unique=True, verbose_name='学院编号')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '学院信息',
                'verbose_name_plural': '学院信息',
            },
        ),
        migrations.CreateModel(
            name='DataPackage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='包文件名称')),
                ('file', models.FileField(upload_to='data/%Y_%m', verbose_name='文件路径')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
            ],
            options={
                'verbose_name': '资料包',
                'verbose_name_plural': '资料包',
                'db_table': 'upload_file',
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='班级名称')),
                ('no', models.CharField(max_length=30, unique=True, verbose_name='班级编号')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('college', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.College', verbose_name='所属学院')),
            ],
            options={
                'verbose_name': '班级信息',
                'verbose_name_plural': '班级信息',
            },
        ),
        migrations.CreateModel(
            name='Register',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sno', models.CharField(db_index=True, max_length=20, unique=True, verbose_name='学号/工号')),
                ('name', models.CharField(max_length=30, verbose_name='真实姓名')),
                ('no', models.CharField(max_length=30, verbose_name='所属编号')),
            ],
            options={
                'verbose_name': '注册信息',
                'verbose_name_plural': '注册信息',
            },
        ),
        migrations.CreateModel(
            name='ScoreRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deduct', models.IntegerField(default=0, verbose_name='扣除的积分')),
                ('desc', models.TextField(max_length=500, verbose_name='原因')),
                ('add_time', models.DateTimeField(auto_now_add=True, verbose_name='添加时间')),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='community.Community', verbose_name='所属社团')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '扣除积分的记录',
                'verbose_name_plural': '扣除积分的记录',
                'db_table': 'community_score_record',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='grade',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.Grade', verbose_name='所属班级'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
